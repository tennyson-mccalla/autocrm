#!/bin/sh

# Function to check for potential secrets using TruffleHog
check_trufflehog() {
    echo "🔍 Running TruffleHog scan..."
    if command -v trufflehog > /dev/null 2>&1; then
        if trufflehog git file://. --since-commit HEAD --only-verified --fail; then
            echo "✅ TruffleHog scan passed"
        else
            echo "❌ TruffleHog found potential secrets in your changes"
            echo "Please remove any sensitive information before pushing"
            exit 1
        fi
    else
        echo "⚠️  Warning: TruffleHog not found. Install with: pip install trufflehog"
    fi
}

# Function to check for potential secrets
check_secrets() {
    echo "🔍 Checking for potential secrets and sensitive data..."

    # Define patterns to search for
    PATTERNS=(
        "api[_-]key[[:space:]]*=[[:space:]]*['\"][a-zA-Z0-9_-]+['\"]"
        "api[_-]secret[[:space:]]*=[[:space:]]*['\"][a-zA-Z0-9_-]+['\"]"
        "password[[:space:]]*=[[:space:]]*['\"][^'\"\$]+['\"]"
        "secret[_-]key[[:space:]]*=[[:space:]]*['\"][a-zA-Z0-9_-]+['\"]"
        "private[_-]key[[:space:]]*=[[:space:]]*['\"][a-zA-Z0-9_-]+['\"]"
        "aws[_-]access[_-]key[[:space:]]*=[[:space:]]*['\"][A-Z0-9]+['\"]"
        "aws[_-]secret[[:space:]]*=[[:space:]]*['\"][A-Za-z0-9/+=]+['\"]"
        "[a-zA-Z0-9_-]+:[[:space:]]*['\"][a-zA-Z0-9_-]{32,}['\"]"
        # Additional patterns for other services
        "gh[_-]token[[:space:]]*=[[:space:]]*['\"][a-zA-Z0-9_-]+['\"]"
        "firebase[[:space:]]*=[[:space:]]*['\"][a-zA-Z0-9_-]+['\"]"
        "stripe[[:space:]]*=[[:space:]]*['\"][sk|pk]_live_[0-9a-zA-Z]+['\"]"
        "mongodb[+]srv[[:space:]]*=[[:space:]]*['\"][^'\"\$]+['\"]"
    )

    # Files to exclude from check (adjust as needed)
    EXCLUDES="package-lock.json|yarn.lock|.husky/|.git/|*.test.ts|*.test.js|*.example"

    for pattern in "${PATTERNS[@]}"; do
        FOUND=$(git diff --cached --name-only | grep -v -E "$EXCLUDES" | xargs grep -l -E "$pattern" 2>/dev/null)
        if [ ! -z "$FOUND" ]; then
            echo "❌ Potential secret or sensitive data found in:"
            echo "$FOUND"
            echo "Pattern matched: $pattern"
            echo "Please remove secrets and use environment variables instead."
            exit 1
        fi
    done
}

# Function to check for unencrypted .env files
check_env_files() {
    echo "🔍 Checking for unencrypted .env files..."

    # Look for .env files that aren't .env.example
    ENV_FILES=$(git diff --cached --name-only | grep "\.env" | grep -v "\.env\.example$")
    if [ ! -z "$ENV_FILES" ]; then
        echo "❌ Unencrypted .env file detected in commit:"
        echo "$ENV_FILES"
        echo "Please remove .env files and add them to .gitignore"
        exit 1
    fi
}

# Run all security checks
echo "🔒 Running security checks before push..."
check_trufflehog
check_secrets
check_env_files

# Run existing build check
echo "🏗️ Running build check before push..."
cd frontend || exit 1
NODE_OPTIONS='--no-deprecation' npm run build || exit 1
echo "✅ Build successful! Proceeding with push..."
